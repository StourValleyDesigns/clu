/*
 * The grid styles
 */

// Set to 12 columns by default
$columns: 12;
$colum_width: ($base_width - ($gutter_width * ($columns - 1))) / $columns;

.clu {
  width: 100%;
  max-width: $base_width * 1px;
  margin: 0 auto;
  overflow: hidden;
}

[class*="grid"] {
  background: #d1d1d1;
  margin: 0 percentage($gutter_width / $base_width) 0 0;
  float: left;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.sark {
  margin-right: 0;
}

.grid-one {
  width: percentage($colum_width / $base_width);
}

.grid-two {
  width: percentage( ($colum_width * 2 + $gutter_width) / $base_width);
}

.grid-three {
  width: percentage( ($colum_width * 3 + ($gutter_width * 2)) / $base_width);
}

.grid-four {
  width: percentage( ($colum_width * 4 + ($gutter_width * 3)) / $base_width);
}

.grid-five {
  width: percentage( ($colum_width * 5 + ($gutter_width * 4)) / $base_width);
}

.grid-six {
  width: percentage( ($colum_width * 6 + ($gutter_width * 5)) / $base_width);
}

.grid-seven {
  width: percentage( ($colum_width * 7 + ($gutter_width * 6)) / $base_width);
}

.grid-eight {
  width: percentage( ($colum_width * 8 + ($gutter_width * 7)) / $base_width);
}

.grid-nine {
  width: percentage( ($colum_width * 9 + ($gutter_width * 8)) / $base_width);
}

.grid-ten {
  width: percentage( ($colum_width * 10 + ($gutter_width * 9)) / $base_width);
}

.grid-eleven {
  width: percentage( ($colum_width * 11 + ($gutter_width * 10)) / $base_width);
}

.grid-twelve {
  width: 100%;
}

// Basic media query for the main grid, feel free to add your own break-points in the main stylesheet if required.
@media handheld, only screen and (max-width: 768px) {
  .clu {
  }

  [class*="grid"] {
    width: auto;
	display: block;
	float: none;
	margin: 0;
  }
}